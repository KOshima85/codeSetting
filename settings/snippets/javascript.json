{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"it()":{
		"prefix": "it()",
		"body": [
			"it('$1', done => {",
			"\t$2",
			"\tdone();",
			"});"
		]
	},
	"describe()":{
		"prefix":"describe()",
		"body": [
			"describe('$1',()=>{",
			"\t$2",
			"});"
		],
	},
	"before()":{
		"prefix": "before()",
		"body": [
			"before(async () =>{",
			"\ttry {",
			"\t\t$1",
			"\t}catch (error) {",
			"\t\tconsole.log(error);",
			"\t\treturn false;",
			"\t}",
			"})",
		]
	},
	"it-has()":{
		"prefix": "it-has()",
		"body": [
			"it('$1 は $2 を持つ', done => {",
			"\texpect( _.has( $1, '$2' ) ).equal(true);",
			"\tdone();",
			"});"
		]
	},
	"it-is()":{
		"prefix": "it-is()",
		"body": [
			"it('$1 は $2 である', done => {",
			"\texpect( _.is$2( $1 ) ).equal(true);",
			"\tdone();",
			"});"
		]
	}
}